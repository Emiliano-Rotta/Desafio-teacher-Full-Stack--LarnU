[{"C:\\Users\\Emi\\Desktop\\Nueva carpeta\\Educacion-IT\\client\\src\\index.js":"1","C:\\Users\\Emi\\Desktop\\Nueva carpeta\\Educacion-IT\\client\\src\\App.js":"2","C:\\Users\\Emi\\Desktop\\Nueva carpeta\\Educacion-IT\\client\\src\\reportWebVitals.js":"3","C:\\Users\\Emi\\Desktop\\Nueva carpeta\\Educacion-IT\\client\\src\\redux\\store\\index.js":"4","C:\\Users\\Emi\\Desktop\\Nueva carpeta\\Educacion-IT\\client\\src\\components\\cursos\\index.js":"5","C:\\Users\\Emi\\Desktop\\Nueva carpeta\\Educacion-IT\\client\\src\\components\\detalle\\index.js":"6","C:\\Users\\Emi\\Desktop\\Nueva carpeta\\Educacion-IT\\client\\src\\components\\crearCurso\\index.js":"7","C:\\Users\\Emi\\Desktop\\Nueva carpeta\\Educacion-IT\\client\\src\\components\\editarCurso\\index.js":"8","C:\\Users\\Emi\\Desktop\\Nueva carpeta\\Educacion-IT\\client\\src\\redux\\reducers\\index.js":"9","C:\\Users\\Emi\\Desktop\\Nueva carpeta\\Educacion-IT\\client\\src\\redux\\actions\\index.js":"10","C:\\Users\\Emi\\Desktop\\Nueva carpeta\\Educacion-IT\\client\\src\\components\\tarjeta\\index.js":"11","C:\\Users\\Emi\\Desktop\\Nueva carpeta\\Educacion-IT\\client\\src\\components\\paginado\\index.js":"12","C:\\Users\\Emi\\Desktop\\Nueva carpeta\\Educacion-IT\\client\\src\\components\\buscador\\index.js":"13"},{"size":635,"mtime":1659995937128,"results":"14","hashOfConfig":"15"},{"size":994,"mtime":1659999435553,"results":"16","hashOfConfig":"15"},{"size":375,"mtime":1659995937144,"results":"17","hashOfConfig":"15"},{"size":282,"mtime":1659995937144,"results":"18","hashOfConfig":"15"},{"size":13417,"mtime":1660020280813,"results":"19","hashOfConfig":"15"},{"size":2000,"mtime":1660019969918,"results":"20","hashOfConfig":"15"},{"size":5030,"mtime":1660019954583,"results":"21","hashOfConfig":"15"},{"size":6042,"mtime":1660019115715,"results":"22","hashOfConfig":"15"},{"size":1998,"mtime":1659995937144,"results":"23","hashOfConfig":"15"},{"size":2448,"mtime":1659995937128,"results":"24","hashOfConfig":"15"},{"size":1271,"mtime":1660020865487,"results":"25","hashOfConfig":"15"},{"size":1203,"mtime":1659995937112,"results":"26","hashOfConfig":"15"},{"size":2683,"mtime":1660009813173,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"11sn5g8",{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},"C:\\Users\\Emi\\Desktop\\Nueva carpeta\\Educacion-IT\\client\\src\\index.js",[],[],[],"C:\\Users\\Emi\\Desktop\\Nueva carpeta\\Educacion-IT\\client\\src\\App.js",[],[],"C:\\Users\\Emi\\Desktop\\Nueva carpeta\\Educacion-IT\\client\\src\\reportWebVitals.js",[],[],"C:\\Users\\Emi\\Desktop\\Nueva carpeta\\Educacion-IT\\client\\src\\redux\\store\\index.js",[],[],"C:\\Users\\Emi\\Desktop\\Nueva carpeta\\Educacion-IT\\client\\src\\components\\cursos\\index.js",["74","75","76","77","78","79","80","81","82","83","84","85","86","87","88"],[],"// import React, { Fragment } from \"react\";\r\n// import { useState, useEffect } from \"react\";\r\n// import {useDispatch, useSelector} from \"react-redux\";  //hook\r\n// import {getpok, ordenNombre} from \"../../redux/actions\";\r\n// import {Link} from \"react-router-dom\";\r\n// import Tarjeta from \"../tarjeta\";\r\n// import Paginado from \"../paginado\";\r\n// import Buscador from \"../buscador\";\r\n// import style from \"./Curso.module.css\";\r\n    \r\nimport React, { useEffect, useState, Fragment } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport {getpok, ordenNombre} from \"../../redux/actions\";\r\nimport { styled } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport Paper from '@mui/material/Paper';\r\nimport Grid from '@mui/material/Grid';\r\nimport { Button } from '@mui/material';\r\nimport Tarjeta from \"../tarjeta\";\r\nimport Paginado from \"../paginado\";\r\nimport Buscador from \"../buscador\";\r\nimport style from \"./Curso.module.css\";\r\n\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n    backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\r\n    ...theme.typography.body2,\r\n    padding: theme.spacing(1),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n    borderRadius: 0,\r\n}));\r\n\r\nconst ColorButton = styled(Button)(({ theme }) => ({\r\n    color: theme.palette.getContrastText('#FFC400'),\r\n    borderRadius: 0,\r\n    backgroundColor: '#FFC400',\r\n    '&:hover': {\r\n        backgroundColor: '#ffa800',\r\n    },\r\n}));\r\n\r\nconst ITEMS_PER_PAGE = 6;\r\n\r\nexport default function Cursos (){\r\n    \r\n    const cursoLarnu = useSelector ((state) => state.cursoLarnu); \r\n    const dispatch = useDispatch();\r\n    \r\n    const [input, setInput] = useState ({\r\n        nombre: \"\",\r\n        imagen: \"\",\r\n        description: \"\",    \r\n    })  \r\n\r\n\r\n    const [error, setError] = useState (\"\")\r\n    const [orden, setOrden] = useState (\"\") \r\n    const [actualPag, setActualPag] = useState (1)\r\n    const [cursoPorPag, setCursoPorPag ] = useState(6)\r\n\r\n    const indiceUltimoP = actualPag * cursoPorPag //12\r\n    const indicePrimerP = indiceUltimoP - cursoPorPag //0\r\n    const actualCurso = cursoLarnu?.slice(indicePrimerP, indiceUltimoP)// slice me trae una copia en la que eloriginal n se destruye\r\n    const paginado = (pageNumber) =>{\r\n        setActualPag (pageNumber)\r\n    }\r\n\r\n\r\n    useEffect(()=>{\r\n        dispatch (getpok());\r\n        setActualPag (1);\r\n    },[dispatch])\r\n\r\n    \r\n    function handleSort(e){\r\n        e.preventDefault();\r\n        dispatch (ordenNombre(e.target.value))\r\n        setActualPag (1);\r\n        setOrden (`Ordenado ${e.target.value}`)\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const [checkout, setCheckout] = useState(false)\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n\r\n\r\n    \r\n    // useEffect(() => {\r\n    //     return () => {\r\n    //         dispatch(resetTotal());\r\n    //     }\r\n\r\n    // }, [])\r\n    const [responsive, setResponsive] = useState({\r\n        xs: false,\r\n        sm: false,\r\n        md: false\r\n    });\r\n    const handleResponsive = () => {\r\n        if (window.innerWidth < 440) return setResponsive({ xs: true, sm: false, md: false })\r\n        else if (window.innerWidth < 600) return setResponsive({ xs: false, sm: true, md: false })\r\n        else if (window.innerWidth < 900) return setResponsive({ xs: false, sm: false, md: true })\r\n    }\r\n\r\n    // if (currentPage < 1) setCurrentPage(1);\r\n    return (\r\n        <Box sx={{ width: 1, marginTop: 3  }}>\r\n            <img className ={style.foto} src = \"https://media-exp1.licdn.com/dms/image/C4D1BAQH06S9tc3ZRgA/company-background_10000/0/1637873037447?e=2159024400&v=beta&t=1mPH4Ew4bV-_S7lDCpKAfxIqvZigfuEf1T7q9sBU0dw\"/>\r\n            <Grid container direction='column'>\r\n                <Grid  container justifyContent='center' spacing={2} >\r\n                    <Grid item xs={12} md={7} lg={7} xl={6}>\r\n\r\n                        {/* <Item sx={{ bgcolor: \"blue\"}}> */}\r\n                            {\r\n                               \r\n                                (cursoLarnu.length === 0)\r\n                                    ? <Item sx={{ bgcolor: \"#fff\",  marginTop: \"5%\", display: 'flex', flexDirection: 'column' }}  elevation={1}> <br />\r\n                                        <h1>LarnU Cursos </h1>\r\n                                        <h3> No hay ning√∫n curso disponible, pero puede crear uno si desea... </h3>\r\n                                    </Item>\r\n                                    : (\r\n\r\n                                        <>\r\n                                        <Grid container justifyContent='center' item xs={12} width='100%' height={50} mt={2} mb={2}>\r\n                                        {\r\n                                            // (responsive.md) ? <div style={{ backgroundColor: '#FFC400', color: \"rgb(53, 43, 119)\", width: '100%', display: 'flex', borderRadius: 5, justifyContent: 'space-evenly', alignItems: 'center' }}>\r\n                                            //      <Link to=\"/crear\" style={{ textDecoration: 'none', color: 'black' }}><ColorButton sx={{ color: \"white\", margin: 1, borderRadius: 1, fontSize: 15 }}>Crear curso</ColorButton></Link>\r\n                                            //     <h2  height='155%'>Cursos Larnu</h2>  \r\n                                            //     <Buscador setActualPag = {setActualPag} />\r\n                                               \r\n                                            // </div>\r\n\r\n                                            //     : (responsive.xs)\r\n                                            //         ? <div style={{ backgroundColor: '#FFC400', color: \"rgb(53, 43, 119)\", width: '100%', display: 'flex', borderRadius: 5, justifyContent: 'space-evenly', alignItems: 'center' }}>\r\n                                            //             <Link to=\"/crear\" style={{ textDecoration: 'none', color: 'black' }}><ColorButton sx={{ color: \"white\", margin: 1, borderRadius: 1, fontSize: 15 }}>Crear curso</ColorButton></Link>\r\n                                            //             <h2 height='95%'>Cursos Larnu</h2>  \r\n                                            //             <Buscador setActualPag = {setActualPag} />\r\n                                                        \r\n                                            //         </div>\r\n\r\n                                            //         : \r\n                                                    <div style={{ backgroundColor: '#FFC400', color: \"rgb(53, 43, 119)\", width: '100%', display: 'flex', borderRadius: 5, justifyContent: 'space-evenly', alignItems: 'center' }}>\r\n                                                        <Link to=\"/crear\" style={{ textDecoration: 'none' }}><ColorButton sx={{ color: \"white\", marginTop: 1, borderRadius: 1, fontSize: 17 }}>Crear curso</ColorButton></Link>\r\n                                                        <h2  height='155%'>CURSOS LARNU</h2>\r\n                                                        <Buscador setActualPag = {setActualPag} />\r\n                                                   \r\n                                                    </div>\r\n                                        }\r\n                                        </Grid>\r\n\r\n                                            <div >\r\n\r\n                                            <Item className={style.card} >\r\n                                                <Grid container spacing={0.5}>\r\n                                                    {actualCurso.map(p => {\r\n                                                        return(\r\n                                                            <Fragment >                    \r\n                                                            <Link  to = {\"/idCurso/\" + p.id}> \r\n                                                                <Tarjeta \r\n                                                                nombre ={p.nombre.charAt(0).toUpperCase() + p.nombre.slice(1) }  \r\n                                                                imagen ={p.imagen}\r\n                                                                key={p.id}/>\r\n                                                            </Link>  \r\n                                                            </Fragment>\r\n                                                        ) \r\n                                                    })}\r\n\r\n                                                </Grid>\r\n                                            </Item>\r\n                                            <div> \r\n                                                <Paginado\r\n                                                cursoPorPag={cursoPorPag}\r\n                                                cursoLarnu ={cursoLarnu.length}\r\n                                                paginado ={paginado}\r\n                                                actualPag ={actualPag}\r\n                                                \r\n                                                />\r\n                                            \r\n                                            </div> \r\n                                                                   \r\n\r\n                                            </div>\r\n                                        </>)\r\n                            }\r\n\r\n                            {\r\n                                (cursoLarnu.length === 0) ? \r\n                                <Item sx={{ bgcolor: \"#fff\",  marginTop: 0, display: 'flex', flexDirection: 'column' }}  elevation={1}> \r\n                                    <Link to=\"/crear\" style={{ textDecoration: 'none', color: 'black' }}><ColorButton sx={{ margin: 1, borderRadius: 1, fontSize: 15 }}>Crear curso</ColorButton></Link>\r\n                                </Item>  : \"\"\r\n                                \r\n                            }\r\n\r\n                        {/* </Item> */}\r\n                    </Grid>\r\n\r\n                </Grid>\r\n            </Grid >\r\n        </Box >\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n// export default function Cursos (){\r\n//     const dispatch = useDispatch()\r\n//     const cursoLarnu = useSelector ((state) => state.cursoLarnu); \r\n    \r\n\r\n// const [input, setInput] = useState ({\r\n//     nombre: \"\",\r\n//     imagen: \"\",\r\n//     description: \"\",    \r\n// })  \r\n\r\n\r\n//     const [error, setError] = useState (\"\")\r\n//     const [orden, setOrden] = useState (\"\") \r\n//     const [actualPag, setActualPag] = useState (1)\r\n//     const [cursoPorPag, setCursoPorPag ] = useState(6)\r\n\r\n//     const indiceUltimoP = actualPag * cursoPorPag //12\r\n//     const indicePrimerP = indiceUltimoP - cursoPorPag //0\r\n//     const actualCurso = cursoLarnu?.slice(indicePrimerP, indiceUltimoP)// slice me trae una copia en la que eloriginal n se destruye\r\n//     const paginado = (pageNumber) =>{\r\n//         setActualPag (pageNumber)\r\n//     }\r\n\r\n\r\n//     useEffect(()=>{\r\n//         dispatch (getpok());\r\n//         setActualPag (1);\r\n//     },[dispatch])\r\n\r\n    \r\n//     function handleSort(e){\r\n//         e.preventDefault();\r\n//         dispatch (ordenNombre(e.target.value))\r\n//         setActualPag (1);\r\n//         setOrden (`Ordenado ${e.target.value}`)\r\n//     }\r\n    \r\n\r\n//     return (\r\n//         <div >\r\n            \r\n//             <div>\r\n            \r\n//             <img className ={style.foto} src = \"https://media-exp1.licdn.com/dms/image/C4D1BAQH06S9tc3ZRgA/company-background_10000/0/1637873037447?e=2159024400&v=beta&t=1mPH4Ew4bV-_S7lDCpKAfxIqvZigfuEf1T7q9sBU0dw\"/>\r\n//             <h2 className ={style.titulo}> Larnu Cursos </h2>\r\n\r\n//             <Buscador setActualPag = {setActualPag} />\r\n//             </div> \r\n          \r\n//             <div> \r\n//                 <Paginado\r\n               \r\n//                 cursoPorPag={cursoPorPag}\r\n//                 cursoLarnu ={cursoLarnu.length}\r\n//                 paginado ={paginado}\r\n//                 actualPag ={actualPag}\r\n                \r\n//                 />\r\n             \r\n//              </div> \r\n                            \r\n        \r\n//          <div className = {style.container}>  \r\n//            {actualCurso.length>0? actualCurso.map ((p) =>{ \r\n//             return(\r\n//                 <Fragment >                    \r\n//                      <Link  to = {\"/idCurso/\" + p.id}> \r\n//                         <Tarjeta \r\n//                         nombre ={p.nombre.charAt(0).toUpperCase() + p.nombre.slice(1) }  \r\n//                         imagen ={p.imagen}    \r\n//                         description ={p.description}   \r\n//                         key={p.id}/>\r\n//                     </Link>  \r\n//                 </Fragment>\r\n//             ) \r\n//         }) : <img className ={style.gif} src = \"https://static.wixstatic.com/media/4023e9_de0d1a0ad7324cecbd3b3849ae8a75d6~mv2.gif\"></img> \r\n\r\n//         } \r\n        \r\n//         <div > \r\n           \r\n//             <select className ={style.boton}  onChange={e =>handleSort(e)}>   \r\n//                 <option value=\"asc\">Ordenar A-Z </option>\r\n//                 <option value=\"des\">Ordenar Z-A </option>\r\n//             </select>\r\n            \r\n\r\n//             <Link to = \"/crear\"><button className ={style.boton}>Crea Curso </button></Link>\r\n\r\n            \r\n//             </div>\r\n         \r\n//         </div>   \r\n    \r\n   \r\n//         </div> \r\n    \r\n//     ) //CIERRA EL RETURN\r\n// }\r\n\r\n\r\n","C:\\Users\\Emi\\Desktop\\Nueva carpeta\\Educacion-IT\\client\\src\\components\\detalle\\index.js",["89"],[],"import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport { getDetalle, deleteDetalle } from \"../../redux/actions\";\r\nimport { useEffect} from \"react\";\r\nimport style from \"./Detail.module.css\";\r\nimport noImage from './assets/no-image.jpg';\r\n\r\n    \r\nexport default function Detail(props){\r\n    // console.log (props)\r\n    const dispatch = useDispatch ()\r\n\r\n    useEffect(() => {\r\n        dispatch (getDetalle(props.match.params.id));\r\n        return function (){dispatch (deleteDetalle())}\r\n    }, [dispatch])\r\n\r\n    \r\n\r\nconst cursoLarnu = useSelector ((state)=> state.cursoLarnu)\r\n\r\nreturn (\r\n    <div >\r\n        {\r\n            cursoLarnu.length>0?\r\n            <div>\r\n            <div className = {style.DetailContainer} >\r\n                {/* nombre */}\r\n                <h2 className ={style.nombre}> {cursoLarnu[0].nombre.charAt(0).toUpperCase() + cursoLarnu[0].nombre.slice(1)}</h2>\r\n                \r\n                {/* imagen */}\r\n                <img src = {cursoLarnu[0].imagen} className ={style.image} alt='Imagen del curso' onError={({ currentTarget }) => {\r\n                    currentTarget.onerror = null; // prevents looping\r\n                    currentTarget.src = `${noImage}`;\r\n                }} />\r\n                \r\n                {/* Descripci√≥n */}\r\n                <h5 className ={style.descripcion}>\r\n                    Descripci√≥n: {cursoLarnu[0].description} \r\n                </h5>\r\n\r\n\r\n                <Link to = \"/\" >\r\n                 <button className ={style.boton} >Volver</button>\r\n                </Link>   \r\n\r\n                <Link to = \"/editar/\" >\r\n                 <button className ={style.boton} >Editar curso</button>\r\n                </Link>   \r\n            </div>    \r\n\r\n             </div> : <img className ={style.gif} src = \"https://static.wixstatic.com/media/4023e9_47a843beb6cc465e8301cff1fd9ffd90~mv2.gif\" alt = \"Cargando...\"></img> \r\n        }\r\n        \r\n    </div>\r\n)\r\n}","C:\\Users\\Emi\\Desktop\\Nueva carpeta\\Educacion-IT\\client\\src\\components\\crearCurso\\index.js",["90","91","92"],[],"import React, { useState, useEffect } from 'react';\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { postPok } from \"../../redux/actions\";\r\nimport style from \"./CrearCurso.module.css\";\r\n\r\nexport default function CrearCurso(){\r\n    const [imageChosen, setImageChosen] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const [imagen, setImagen] = useState(\"\");\r\n    \r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n\r\n    const [errors, setErrors] = useState({})\r\n    const[input, setInput] = useState({  nombre: \"\", imagen: \"\", description: \"\", })\r\n\r\n        function validate(input){\r\n            let errors = {};\r\n\r\n            if(!input.nombre || !/^[a-z]+[A-Za-z0-9\\s]+$/g.test(input.nombre)){\r\n                errors.nombre = 'Al menos dos caracteres el primero, letra min√∫scula.';\r\n            }\r\n            if(!input.imagen ){\r\n                errors.imagen = 'Colocar una imagen, puede ser URL.';\r\n            }\r\n            if(!input.description ){\r\n                errors.description = 'Colocar una descripci√≥n.';\r\n            }\r\n            return errors\r\n\r\n        }\r\n\r\nasync function uploadImage(e) {\r\n    const files = e.target.files;\r\n    const data = new FormData();\r\n    data.append('file', files[0]);\r\n    data.append('upload_preset','ecommerce');\r\n    setImageChosen(true);\r\n    setLoading(true);\r\n    const res = await fetch('https://api.cloudinary.com/v1_1/hentech/image/upload', {\r\n        method: 'POST',\r\n        body: data\r\n    });\r\n    const file = await res.json();\r\n\r\n    setImagen(file.secure_url);\r\n    setLoading(false);\r\n    setInput({...input, imagen: file.secure_url});\r\n  }\r\n\r\n\r\nfunction handleChange(e){\r\n    e.preventDefault ();\r\n    setInput({\r\n    ...input,\r\n    [e.target.name] : e.target.value,\r\n    });\r\n    setErrors(validate({\r\n        ...input,\r\n        [e.target.name]: e.target.value\r\n\r\n    }));console.log (input)\r\n}\r\n\r\n   \r\n    \r\n    function handleSubmit(e){\r\n        e.preventDefault()\r\n        if( input.nombre !== \"\" \r\n        && !errors.hasOwnProperty(\"nombre\") //devuelve un buleano si el objeto tiene la propiedad especificada \r\n        && !errors.hasOwnProperty(\"imagen\")\r\n        && !errors.hasOwnProperty(\"description\") \r\n        )\r\n\r\n        {dispatch(postPok(input))\r\n        alert (\"Curso creado con exito\")\r\n        setInput({\r\n            nombre: \"\",\r\n            imagen: \"\",\r\n            description: \"\",\r\n        })\r\n        history.push('/')\r\n        \r\n        }\r\n        else{\r\n        alert (\"Debe compeltar correctamente todos los campos\")\r\n         \r\n    }\r\n    }\r\n    // useEffect (()=>{\r\n    //             dispatch(getTipo());\r\n    //         }, [dispatch]);\r\n            \r\n\r\n    return(\r\n        <div>\r\n           \r\n            \r\n            <form className ={style.contenedor}  onSubmit = {(e)=>handleSubmit(e)} >\r\n            <h1 className ={style.nombre}>Crear curso</h1>\r\n         <div>\r\n                <label> </label><br/>\r\n                <input\r\n                className ={style.input}\r\n                placeholder=\"Nombre del curso: \"\r\n                autocomplete=\"off\"\r\n                type = \"text\"\r\n                value = {input.nombre}\r\n                name = \"nombre\"\r\n                onChange ={(e)=>handleChange(e)} \r\n                /> \r\n                {errors.nombre && (\r\n                    <p className ={style.error}><p className = \"error\">{errors.nombre}</p></p>\r\n                )}\r\n        </div>\r\n\r\n        <div><br/>\r\n                            \r\n            <input  \r\n            className ={style.input}\r\n            autocomplete=\"off\"  \r\n            type=\"text\" \r\n            value={input.imagen} \r\n            name='imagen' \r\n            placeholder=\"Imagen del curso.\"  \r\n            onChange={(e)=>handleChange(e)} \r\n            /> \r\n             \r\n           \r\n          <input className={style.seleccionarArchivo} type=\"file\" name=\"file\" onChange={uploadImage} ></input> <br/> \r\n          {\r\n              imageChosen && (<img  className={style.seleccionarArchivo}src={imagen} style={{width:'40%'}} alt=\"imagen\"/>) \r\n          }\r\n            \r\n            {errors.imagen && (<p className= {style.error} >{errors.imagen}</p>)}<br/>\r\n            </div>\r\n            <div>\r\n            <br/>\r\n\r\n            <textarea  \r\n            className ={style.textarea}\r\n            autocomplete=\"off\"  \r\n            type=\"text\" \r\n            \r\n           \r\n            value={input.description} \r\n            name='description' \r\n            placeholder=\"Descripci√≥n del curso.\"  \r\n            onChange={(e)=>handleChange(e)} \r\n            />\r\n             {errors.description && (<p className= {style.error} >{errors.description}</p>)}<br/>\r\n        </div> \r\n                \r\n        <br/>\r\n        <button className={style.boton} type='submit'>Crear curso</button>\r\n            \r\n        <Link to= \"/\"><button className ={style.boton}>Volver</button></Link>\r\n          </form>\r\n        </div>\r\n    )\r\n}","C:\\Users\\Emi\\Desktop\\Nueva carpeta\\Educacion-IT\\client\\src\\components\\editarCurso\\index.js",["93"],[],"import React, { useState, useEffect } from 'react';\r\nimport {useLocation, Link, useHistory} from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getOneProduct, editarCurso } from \"../../redux/actions\";\r\nimport style from \"./editarCurso.module.css\";\r\n\r\nexport default function EditarCurso(){\r\n\r\n    const [imageChosen, setImageChosen] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const [imagen, setImagen] = useState(\"\");\r\n\r\n    const history = useHistory ()\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    //para obtener el ID y poder modificar el curso\r\n    const location = useLocation()\r\n    let id = (location.pathname.substring(7,location.pathname.length))\r\n\r\n    let editar = useSelector ((state) => state.cursoLarnu); /////////////////\r\n    if (!editar.nombre){\r\n    dispatch(getOneProduct(id))\r\n    }\r\n    editar = useSelector ((state) => state.cursoLarnu); \r\n\r\n   \r\n\r\n\r\n\r\n    const [errors, setErrors] = useState({})\r\n    const[input, setInput] = useState({  nombre: \"\", imagen: \"\", description: \"\", })\r\n\r\n        function validate(input){\r\n            let errors = {};\r\n\r\n            if(!input.nombre || !/^[a-z]+[A-Za-z0-9\\s]+$/g.test(input.nombre)){\r\n                errors.nombre = 'Al menos dos caracteres el primero, letra min√∫scula.';\r\n            }\r\n            if(!input.imagen ){\r\n                errors.imagen = 'Colocar una imagen, puede ser URL.';\r\n            }\r\n            if(!input.description ){\r\n                errors.description = 'Colocar una descripci√≥n.';\r\n            }\r\n            return errors\r\n\r\n        }\r\n\r\n        async function uploadImage(e) {\r\n            const files = e.target.files;\r\n            const data = new FormData();\r\n            data.append('file', files[0]);\r\n            data.append('upload_preset','ecommerce');\r\n            setImageChosen(true);\r\n            setLoading(true);\r\n            const res = await fetch('https://api.cloudinary.com/v1_1/hentech/image/upload', {\r\n                method: 'POST',\r\n                body: data\r\n            });\r\n            const file = await res.json();\r\n        \r\n            setImagen(file.secure_url);\r\n            setLoading(false);\r\n            setInput({...input, imagen: file.secure_url});\r\n          }\r\n\r\n        useEffect(()=>(setInput({/////////////////////\r\n            nombre: editar.nombre,\r\n            imagen: editar.imagen,\r\n            description: editar.description,\r\n          })),[editar]\r\n          )\r\n\r\n\r\n\r\n\r\nfunction handleChange(e){\r\n    e.preventDefault ();\r\n    setInput({\r\n    ...input,\r\n    [e.target.name] : e.target.value,\r\n    });\r\n    setErrors(validate({\r\n        ...input,\r\n        [e.target.name]: e.target.value\r\n\r\n    }));console.log (input)\r\n}\r\n\r\n   \r\n    \r\n    function handleSubmit(e){\r\n        e.preventDefault()\r\n        if  (  input.nombre === editar.nombre///////////\r\n            && input.imagen === editar.imagen\r\n            && input.description === editar.description\r\n            \r\n         ){\r\n            alert (\"Curso editar algun campo\")\r\n          }\r\n\r\n        else if( input.nombre === 0 \r\n            || !errors.hasOwnProperty(\"nombre\") //devuelve un buleano si el objeto tiene la propiedad especificada \r\n            || !errors.hasOwnProperty(\"imagen\")\r\n            || !errors.hasOwnProperty(\"description\") \r\n        )\r\n        {\r\n        alert (\"Debe compeltar correctamente todos los campos\")\r\n        }\r\n\r\n        else {\r\n        dispatch(editarCurso(id, input))\r\n        alert(\"Producto modificado con exito\");\r\n        history.push('/')\r\n            \r\n           \r\n        }\r\n        alert (\"Debe compeltar correctamente todos los campos\")\r\n        setInput({\r\n            nombre: \"\",\r\n            imagen: \"\",\r\n            description: \"\",\r\n        })\r\n       \r\n    }\r\n    \r\n   \r\n            \r\n\r\n    return(\r\n        <div>\r\n           \r\n            \r\n            <form className ={style.contenedor}  onSubmit = {(e)=>handleSubmit(e)} >\r\n            <h1 className ={style.nombre}>Editar curso</h1>\r\n         <div>\r\n                <label> </label><br/>\r\n                <input\r\n                className ={style.input}\r\n                placeholder=\"Nombre del curso: \"\r\n                autocomplete=\"off\"\r\n                type = \"text\"\r\n                value = {input.nombre}\r\n                name = \"nombre\"\r\n                onChange ={(e)=>handleChange(e)} \r\n                /> \r\n                {errors.nombre && (\r\n                    <p className ={style.error}><p className = \"error\">{errors.nombre}</p></p>\r\n                )}\r\n        </div>\r\n\r\n        <div><br/>\r\n                            \r\n            <input  \r\n            className ={style.input}\r\n            autocomplete=\"off\"  \r\n            type=\"text\" \r\n            value={input.imagen} \r\n            name='imagen' \r\n            placeholder=\"Imagen del curso.\"  \r\n            onChange={(e)=>handleChange(e)} \r\n            /> \r\n             {errors.imagen && (<p className= {style.error} >{errors.imagen}</p>)}<br/>\r\n           \r\n          <input className={style.seleccionarArchivo} type=\"file\" name=\"file\" onChange={uploadImage} ></input> <br/> \r\n          {\r\n              imageChosen && (<img  className={style.seleccionarArchivo}src={imagen} style={{width:'40%'}} alt=\"imagen\"/>) \r\n          }\r\n            \r\n           \r\n            </div>\r\n        <div><br/>\r\n            <textarea  \r\n            className ={style.textarea}\r\n            autocomplete=\"off\"  \r\n            type=\"text\" \r\n            value={input.description} \r\n            name='description' \r\n            placeholder=\"Descripci√≥n del curso.\"  \r\n            onChange={(e)=>handleChange(e)} \r\n            />\r\n             {errors.description && (<p className= {style.error} >{errors.description}</p>)}<br/>\r\n        </div> \r\n                \r\n        <br/>\r\n        <button className={style.boton} type='submit'>Editar curso</button>\r\n            \r\n        <Link to= \"/\"><button className ={style.boton}>Volver</button></Link>\r\n          </form>\r\n        </div>\r\n    )\r\n}","C:\\Users\\Emi\\Desktop\\Nueva carpeta\\Educacion-IT\\client\\src\\redux\\reducers\\index.js",[],[],"C:\\Users\\Emi\\Desktop\\Nueva carpeta\\Educacion-IT\\client\\src\\redux\\actions\\index.js",[],[],"C:\\Users\\Emi\\Desktop\\Nueva carpeta\\Educacion-IT\\client\\src\\components\\tarjeta\\index.js",["94","95","96"],[],"import React, { useState, useEffect } from 'react';\r\nimport style from \"./Tarjeta.module.css\";\r\nimport noImage from './assets/no-image.jpg';\r\n\r\n\r\nexport default function Tarjeta ({nombre, imagen, description}){\r\n   \r\n    \r\n\r\n    const [modal, setModal] = useState({\r\n        open: false,\r\n        type: '',\r\n        text: ''\r\n    });\r\n\r\n\r\n    return (\r\n        <>\r\n            <div \r\n           \r\n            className={style.card}>\r\n                <h3 className ={style.nombre}>Curso: {nombre}</h3>\r\n                <img src={imagen} className={style.cardImg} alt='Imagen del curso' onError={({ currentTarget }) => {\r\n                    currentTarget.onerror = null; // prevents looping\r\n                    currentTarget.src = `${noImage}`;\r\n                }} />\r\n  \r\n            </div >\r\n           \r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// export default function Tarjeta ({nombre, imagen, description}){\r\n//     return (\r\n//         <div className = {style.CardContainer}>\r\n\r\n//             <h3 className ={style.name}>Curso: {nombre}</h3>\r\n//             <img src = {imagen} alt = {nombre} className ={style.image} />\r\n//             <h3 className ={style.tipo}>Descripci√≥n: {description}</h3> \r\n     \r\n//         </div>\r\n//     );\r\n// }\r\n\r\n\r\n","C:\\Users\\Emi\\Desktop\\Nueva carpeta\\Educacion-IT\\client\\src\\components\\paginado\\index.js",[],[],"C:\\Users\\Emi\\Desktop\\Nueva carpeta\\Educacion-IT\\client\\src\\components\\buscador\\index.js",["97"],[],"import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport {useDispatch} from \"react-redux\"\r\nimport { getNombre } from \"../../redux/actions\";\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport { styled } from '@mui/material/styles';\r\nimport InputBase from '@mui/material/InputBase';\r\n\r\nconst Search = styled('div')(({ theme }) => ({\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: 'white',\r\n    height: 40,\r\n    width: '70%',\r\n    [theme.breakpoints.up('xs')]: {\r\n        width: '100%',\r\n        textAlign: 'center'\r\n    },\r\n    [theme.breakpoints.up('sm')]: {\r\n        width: '80%',\r\n        textAlign: 'center'\r\n    },\r\n}));\r\n\r\n// const SearchIconWrapper = styled('div')(({ theme }) => ({\r\n//     padding: theme.spacing(0, 2),\r\n//     height: '100%',\r\n//     position: 'absolute',\r\n//     pointerEvents: 'none',\r\n//     display: 'flex',\r\n//     alignItems: 'center',\r\n//     justifyContent: 'center',\r\n// }));\r\n\r\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\r\n    color: 'gray',\r\n    '& .MuiInputBase-input': {\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        // vertical padding + font size from searchIcon\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '20ch',\r\n        },\r\n        [theme.breakpoints.up('xs')]: {\r\n            width: '100%',\r\n            marginLeft: 30\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function SearchBar(){\r\n    const dispatch = useDispatch()\r\n    const [nombre, setNombre] = useState (\"\")\r\n\r\n    function handleInputChange (e){\r\n    e.preventDefault()\r\n    setNombre(e.target.value)\r\n    console.log (nombre)\r\n    \r\n    }\r\n\r\n    function handleSubmit (e){\r\n    e.preventDefault()\r\n    dispatch(getNombre (nombre))\r\n    console.log (nombre)\r\n    }\r\n\r\n    return (\r\n     <div>\r\n        <Search>\r\n        {/* <SearchIconWrapper>\r\n            <SearchIcon />\r\n        </SearchIconWrapper> */}\r\n        <form onSubmit={(e) => handleSubmit(e)}>\r\n            <StyledInputBase\r\n                value={nombre}\r\n                onChange={(e) => handleInputChange(e)}\r\n                placeholder=\"Buscar curso...\"\r\n                inputProps={{ 'aria-label': 'search' }}\r\n            />\r\n        </form>\r\n    </Search>\r\n\r\n    </div>\r\n\r\n\r\n\r\n\r\n        // <div>\r\n        //     <input\r\n            \r\n        //     type = \"text\" \r\n        //     placeholder = \"Buscar...\"\r\n        //     onChange = {(e) => handleInputChange (e)}\r\n            \r\n        //     />\r\n        //     <button type =\"submit\"  onClick={(e)=> handleSubmit(e) } > Buscar</button>\r\n        // </div>\r\n    )\r\n}",{"ruleId":"98","severity":1,"message":"99","line":44,"column":7,"nodeType":"100","messageId":"101","endLine":44,"endColumn":21},{"ruleId":"98","severity":1,"message":"102","line":51,"column":12,"nodeType":"100","messageId":"101","endLine":51,"endColumn":17},{"ruleId":"98","severity":1,"message":"103","line":51,"column":19,"nodeType":"100","messageId":"101","endLine":51,"endColumn":27},{"ruleId":"98","severity":1,"message":"104","line":58,"column":12,"nodeType":"100","messageId":"101","endLine":58,"endColumn":17},{"ruleId":"98","severity":1,"message":"105","line":58,"column":19,"nodeType":"100","messageId":"101","endLine":58,"endColumn":27},{"ruleId":"98","severity":1,"message":"106","line":59,"column":12,"nodeType":"100","messageId":"101","endLine":59,"endColumn":17},{"ruleId":"98","severity":1,"message":"107","line":61,"column":25,"nodeType":"100","messageId":"101","endLine":61,"endColumn":39},{"ruleId":"98","severity":1,"message":"108","line":77,"column":14,"nodeType":"100","messageId":"101","endLine":77,"endColumn":24},{"ruleId":"98","severity":1,"message":"109","line":91,"column":12,"nodeType":"100","messageId":"101","endLine":91,"endColumn":20},{"ruleId":"98","severity":1,"message":"110","line":91,"column":22,"nodeType":"100","messageId":"101","endLine":91,"endColumn":33},{"ruleId":"98","severity":1,"message":"111","line":92,"column":12,"nodeType":"100","messageId":"101","endLine":92,"endColumn":23},{"ruleId":"98","severity":1,"message":"112","line":92,"column":25,"nodeType":"100","messageId":"101","endLine":92,"endColumn":39},{"ruleId":"98","severity":1,"message":"113","line":102,"column":12,"nodeType":"100","messageId":"101","endLine":102,"endColumn":22},{"ruleId":"98","severity":1,"message":"114","line":107,"column":11,"nodeType":"100","messageId":"101","endLine":107,"endColumn":27},{"ruleId":"115","severity":1,"message":"116","line":116,"column":13,"nodeType":"117","endLine":116,"endColumn":217},{"ruleId":"118","severity":1,"message":"119","line":17,"column":8,"nodeType":"120","endLine":17,"endColumn":18,"suggestions":"121"},{"ruleId":"98","severity":1,"message":"122","line":1,"column":27,"nodeType":"100","messageId":"101","endLine":1,"endColumn":36},{"ruleId":"98","severity":1,"message":"123","line":3,"column":23,"nodeType":"100","messageId":"101","endLine":3,"endColumn":34},{"ruleId":"98","severity":1,"message":"124","line":9,"column":12,"nodeType":"100","messageId":"101","endLine":9,"endColumn":19},{"ruleId":"98","severity":1,"message":"124","line":10,"column":12,"nodeType":"100","messageId":"101","endLine":10,"endColumn":19},{"ruleId":"98","severity":1,"message":"122","line":1,"column":27,"nodeType":"100","messageId":"101","endLine":1,"endColumn":36},{"ruleId":"98","severity":1,"message":"125","line":10,"column":12,"nodeType":"100","messageId":"101","endLine":10,"endColumn":17},{"ruleId":"98","severity":1,"message":"126","line":10,"column":19,"nodeType":"100","messageId":"101","endLine":10,"endColumn":27},{"ruleId":"98","severity":1,"message":"127","line":5,"column":8,"nodeType":"100","messageId":"101","endLine":5,"endColumn":18},"no-unused-vars","'ITEMS_PER_PAGE' is assigned a value but never used.","Identifier","unusedVar","'input' is assigned a value but never used.","'setInput' is assigned a value but never used.","'error' is assigned a value but never used.","'setError' is assigned a value but never used.","'orden' is assigned a value but never used.","'setCursoPorPag' is assigned a value but never used.","'handleSort' is defined but never used.","'checkout' is assigned a value but never used.","'setCheckout' is assigned a value but never used.","'currentPage' is assigned a value but never used.","'setCurrentPage' is assigned a value but never used.","'responsive' is assigned a value but never used.","'handleResponsive' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.match.params.id'. Either include it or remove the dependency array.","ArrayExpression",["128"],"'useEffect' is defined but never used.","'useSelector' is defined but never used.","'loading' is assigned a value but never used.","'modal' is assigned a value but never used.","'setModal' is assigned a value but never used.","'SearchIcon' is defined but never used.",{"desc":"129","fix":"130"},"Update the dependencies array to be: [dispatch, props.match.params.id]",{"range":"131","text":"132"},[568,578],"[dispatch, props.match.params.id]"]